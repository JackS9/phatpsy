      PROGRAM PHATPSY
      IMPLICIT REAL*8(A-H,O,P,R-Z),LOGICAL*1(Q)
C----------------------------------------------------------------------
C
C     MAIN...
C
C        THIS IS THE MAIN ROUTINE OF THE 'PHATPSY' PROGRAM.  IT
C     READS CONTROL AND DIMENSION DATA FOR THE REST OF THE PROGRAM.
C     THE INPUT IS AS FOLLOWS:
C
C     TITLE(*).... 80-CHARACTER TITLE WHICH WILL HEAD EVERY PAGE.
C
C     &CTLINP... (NAMELIST INPUT, DEFAULTS ARE IN /'S)
C
C        QCHECK... =T --> ONLY THE INPUT IS CHECKED. /F/
C        QRERUN... =T --> RESTART WITH COMPUTED INTEGRALS, BUT DO 
C                  *NOT* PERFORM SCF. USEFUL FOR CHANGING PRINTING OR
C                  PUNCHING OPTIONS /F/                        
C        QATOM.... =T --> ATOMIC CALCULATION ONLY. /F/
C        QRSTRT... =T --> THIS IS A RESTART RUN STARTING AFTER THE LAST
C                  EWMO CYCLE WITH DATA ON UNIT IUNIT4. /F/
C                  NOTE 1:  ALL OTHER DATA MAY BE LEFT UNCHANGED
C                           (SEE ATOMIC FOR OVERRIDING RESTART DATA).
C                  NOTE 2:  IF COORDINATES ARE NOT BEING CHANGED
C                           CONSIDER QCMPTD=T (BELOW).
C        QBAKUP... =T --> THIS IS A RESTART RUN STARTING AFTER THE LAST
C                  SCF CYCLE WITH DATA ON UNIT IUNIT3. /F/
C        QOPEN.... =T --> THIS IS SPIN-UNRESTRICTED CALCULATION. /T/
C        QDEBUG... =T --> THIS IS A DEBUG (DIAGNOSTIC) RUN AND WILL
C        QTRACE... =T --> A RUN TRACE WILL BE WRITTEN TO STDERR.   
C                  PRODUCE SUPPLEMENTAL OUTPUT ON UNIT IUDUMP. /F/
C        QSEPAT... =T --> THIS CALCULATION WILL START WITH NEAR-
C                  SEPARATED-ATOM CALCULATION AS THE FIRST CYCLE.
C                  IGNORED IF QRSTRT=T. /T/
C        QCMPTD... =T --> THE 2-CENTER INTEGRALS ARE ALREADY COMPUTED
C                  AND ARE ON UNITS IUNIT1 AND IUNIT2. /F/
C        QMXREC... =T --> AMOUNT OF DIRECT-ACCESS SPACE DETERMINED
C                  INTERNALLY.  OTHERWISE NRECS AND LENREC ARE USED.
C                  (WARNING: INTERNAL COMPUTATION WILL OVERESTIMATE)
C                  (SEE BELOW). /T/
C        NRECS.... NUMBER OF DIRECT-ACCESS RECORDS TO BE ALLOCATED ON
C                  IUNIT1 (SEE CONTRL). /200/
C        LENREC... LENGTH OF EACH DIRECT-ACCESS RECORD (WORDS). /50/
C        QEWMO.... =T --> A EWMO CALCULATION WILL BE PERFORMED FOR EACH
C                  CYCLE, OTHERWISE THE ATOMIC ORBITALS ARE USED AS
C                  MOLECULAR ORBTALS. /T/
C        QPRINT... =T --> INTERMEDIATE RESULTS FOR EACH CYCLE WILL BE
C                  PRINTED. /F/
C        QMNPRT... =T --> ONLY MINIMAL PRINTING PERFORMED (TOTAL
C                   ENERGY AND MO'S) IF IUNIT(8) IS A DUMMY UNIT. /F/
C        QPLOT.... =T --> ATOMIC TOTAL DENSITY PLOTS WILL BE GENERATED.
C                  /F/
C        QAUDMP... =T --> THE CHARGE TRANSFER WILL BE AUTOMATICALLY
C                  DAMPED ACCORDING TO THE RELATIVE AMOUNT OF CHARGE
C                  TRANSFER AND THE EXTRAPOLATED TOTAL ENERGY, OTHERWISE
C                  SEE CDAMP.  SEE ALSO CACCEL. /F/
C        QMODVO... =T --> VIRTUAL ORBITAL ENERGIES WILL BE MODIFIED
C                  TO SIMULATE "N-1" POTENTIAL. /F/              
C        QCORE.... =T --> ATOMIC CORES ARE TREATED AS VALENCE. /F/
C        QANGST... =T --> DISTANCES WILL BE GIVEN IN ANGSTROMS
C                  AND CONVERTED TO ATOMIC UNITS WITHIN. /F/
C        NATOM.... TOTAL NUMBER OF ATOMS IN THE MOLECULE. /1/
C        NELEM.... NUMBER OF DIFFERENT ELEMENTS IN THE MOLECULE. /1/
C        NORBT.... TOTAL NUMBER OF ATOMIC ORBITALS USED IN THE MOLECULE.
C                  /5/
C        MXNORB... MAXIMUM NUMBER OF ATOMIC ORBITALS ON ANY ATOM. /5/
C        MSTOT.....TOTAL NUMBER OF STO'S (INCLUDING ML'S) USED IN THE
C                  MOLECULE /5/
C        MXNSTO... MAXIMUM NUMBER OF STO'S (NOT INCLUDING ML'S)
C                  USED ON ANY ATOM /3/.
C        MXMSTO... MAXIMUM NUMBER OF STO'S (INCLUDING ML'S) USED ON
C                  ANY ATOM. /5/
C        NMAX..... MAXIMUM N-QUANTUM NUMBER FOR ANY STO. /2/
C        LMAX..... MAXIMUM L-QUANTUM NUMBER FOR ANY STO. /1/
C        MXITER... MAXIMUM NUMBER SCF-ITERATIONS ALLOWED FOR ANY ATOM
C                  IN A CYCLE. /20/
C        MXCYCL... MAXIMUM NUMBER OF COMPLETE CYCLES ALLOWED. /0/
C        TIMEND... MAXIMUM CPU TIME TO BE ALLOWED (SECONDS). /9.E4/
C        LENBUF... NUMBER OF DOUBLE WORDS (DIMENSION) IN THE TWO-
C                  ELECTRON INTEGRAL BUFFER. /804/
C        IUNIT(*)... FORTRAN I/O UNIT NUMBERS. /1,2,...,20/
C
C           THE FOLLOWING 5 PARAMETERS DESCRIBE THE MOLECULAR STATE
C           WITH RESPECT TO THE GROUND STATE (WHICH IS DETERMINED BY A
C           HUND'S RULE FILLING OF THE LOWEST ENERGY MO'S FIRST).
C
C        NCREAT... THE NUMBER OF CREATION OPERATIONS TO ACT ON THE
C                  GROUND STATE. /0/
C        ICREAT(*)... INDEX OF MOLECULAR ORBITALS WHOSE OCCUPATIONS
C                     ARE TO BE INCREASED BY 1 (NEGATIVE FOR BETA SPIN).
C        NANNIH... THE NUMBER OF ANNIHILATION OPERATIONS TO ACT ON THE
C                  GROUND STATE. /0/
C        IANNIH(*)... INDEX OF MOLECULAR ORBITALS WHOSE OCCUPATIONS
C                     ARE TO BE DECREASED BY 1 (NEGATIVE FOR BETA SPIN).
C        QTRANS... =T --> THIS WILL BE A TRANSITION STATE CALCULATION,
C                  THE OCCUPATION CHANGES WILL BE 1/2. /F/
C
C        EXPMIN... MINIMUM EXPONENT TO BE EVALUATED BY DEXP(*). /-60./
C        CONVRG... TOTAL ENERGY DIFFERENCE CONVERGENCE THRESHOLD. /10-3/
C        THETA.... FERMI "TEMPERATURE" FOR CHARGE EQUILIBRATION. /10+5/
C        CDAMP.... DAMPING FACTOR FOR REDETERMINING ATOMIC OCCUPATION
C                  NUMBERS VIA CHARGE TRANSFER, WHERE
C                      NEW' = CDAMP*OLD + (1-CDAMP)*NEW
C                  AND CDAMP IS BETWEEN 0 AND 1. /1/
C                  (IGNORED IF QAUDMP=T).
C        CACCEL... ACCELATOR FOR THE CHARGE DAMPING FACTOR SUCH THAT FOR
C                  EACH CYCLE
C                     CDAMP' = CDAMP**CACCEL
C                  IF QAUDMP=T AND THE EXTRAPOLATED TOTAL ENERGY IS
C                  PREDICTED TO BE LOWERED THEN
C                     CDAMP = RCT**CACCEL
C                  WHERE RCT IS THE PREDICTED RELATIVE CHARGE TRANSFER.
C                  (THE DEFAULT IS NO ACCELERATING OR IF QAUDMP=T
C                  LINEAR DAMPING, CACCEL=1.0)
C        QC2FIT... =T --> FIT 2-CENTER COULOMB POTENTIAL EACH CYCLE. /T/
C        QX2FIT... =T --> FIT 2-CENTER EXCHANGE POTENTIAL EACH CYCLE. /T/
C        WGT0..... RELATIVE WEIGHT GIVEN TO THE CONDITION THAT THE MODEL
C                  POTENTIAL BEHAVES PROPERLY AT THE NUCLEUS. /1./
C        WGT1..... RELATIVE WEIGHT GIVEN TO THE CONDITION THAT THE MODEL
C                  POTENTIAL REPRODUCES THE HF COULOMB POTENTIAL AT THE
C                  NUCLEUS. /1./
C        WGT2..... RELATIVE WEIGHT GIVEN TO THE CONDITION THAT THE MODEL
C                  POTENTIAL REPRODUCES THE EXTERNAL NUCLEAR ATTRACTION
C                  ENERGY. /1./
C        WGTC..... RELATIVE WEIGHT GIVEN TO THE CONDITION THAT THE MODEL
C                  POTENTIAL REPRODUCES THE CORE COULOMB ENERGY. /1./
C        WGTV..... RELATIVE WEIGHT GIVEN TO THE CONDITION THAT THE MODEL
C                  POTENTIAL REPRODUCES THE VALENCE COULOMB ENERGY. /1./
C        VDAMP.... DAMPING FACTOR FOR THE EXTERNAL POTENTIALS. /0.0/
C        VACCEL... ACCELERATOR FOR VDAMP. /1.0/ (SEE CACCEL)
C        RANGE.... RANGE (IN A.U.) OF COORDINATES TO BE PLOTTED. /10.0/
C        QPSMET... =T --> USE PSEUDOMETRIC INSTEAD OF CONSTANT PKE /T/          
C        PKSCAL... SCALE FOR PROJECTION IN P-K PSEUDOPOTENTIAL. /1.0/
C        PKE...... ENERGY CONSTANT USED IN P-K PSEUDOPOTENTIAL. /0.0/
C        TFEXP(*).... TF-APPROX. TO EXPONENTS IN MODEL POTENTIAL.
C        TFCOEF(*)... TF-APPROX. TO COEFFICIENTS IN MODEL POTENTIAL.
C        LTF(*)...... L-TYPE OF TERM IN TF MODEL POTENTIAL.
C
C           THE FOLLOWING PARAMETERS (KATOM, KORB, KSP) DESCRIBE AN
C           ATOMIC ORBITAL TO BE PUNCHED.
C
C        KATOM.... THE ATOM TO WHICH THIS ATOMIC ORBITAL CORRESPONDS.
C                  (PUNCH ORBITALS ON ALL ATOMS IF GT NATOM)
C                  (PUNCH UNPROJECTED MULTI-CENTERED ORBITAL IF LT 0)
C                  /THE DEFAULT IS TO NOT PUNCH ANY, 0/
C        KORB..... THE ORBITAL INDEX ON THIS ATOM. /0/
C                  (PUNCH ALL ORBITALS IF GT NORB)
C                  (PUNCH FITTED COULOMB POTENTIAL IF 0)
C        KSP...... THE SPIN LABEL (1 OR 2). /0/
C                  (PUNCH BOTH SPINS IF 0 OR GT ISPIN)
C
C
C     OTHER VARIABLE DEFINITIONS:
C
C        QGSTAT...... =T --> GROUND STATE CALCULATION (NCREAT=NANNIH=0).
C        N2ORBT...... =NORBT*(NORBT+1)/2
C        N2ATOM...... =NATOM*(NATOM+1)/2
C        NNMX........ =2*NMAX
C        NNMXM1...... =NNMX-1
C        LMXP1....... =LMAX+1
C        LLMXP1...... =2*LMAX+1
C        LLMXP2...... =2*LMAX+2
C        NCGC........ =NDXMAX(LMAX), DIMENSION OF C-G ARRAY.
C        LLMX........ =2*LMAX
C        L3MX........ =(LLMX+1)*(LLMX+2)*(LLMX+3)/6
C        NABDIM...... =4*NMAX-2, DIMENSION OF A AND B ARRAYS.
C        ISPIN....... =1 FOR QOPEN=F, =2 FOR QOPEN=T.
C        NYLM........ =(2*LMAX+1)*(LMAX+1), NUMBER OF YLM'S.
C        IW.......... FORTRAN I/O UNIT FOR WRITING.
C        IUDUMP...... FORTRAN I/O UNIT FOR DIAGNOSTIC OUTPUT.
C
C     ROUTINES CALLED:  ERASE, GETSET(TIMOUT), SETBOM(BOMB),
C                       NDXMAX(NDXCG),$PAGE, ASSARD, DUMP(BOMB), TIMOUT
C
C     COMMON USAGE:
C
C        /PARMS/  USES - IPARM(1)(=NATOM),  IPARM(2)(=NELEM),
C
C     ... MORE TO COME ...
C
C----------------------------------------------------------------------

C      LOGICAL SFOpenOldText,SFOpenNewText

      COMMON /PARMS/ APARM(20),IPARM(50),QPARM(50)
      EQUIVALENCE (QPARM(1),QRSTRT),  (QPARM(2),QBAKUP),
     X            (QPARM(4),QOPEN),   (QPARM(7),QDEBUG),
     X            (QPARM(8),QSEPAT),  (QPARM(9),QCMPTD),
     X            (QPARM(10),QEWMO),  (QPARM(19),QGSTAT),
     X            (QPARM(20),QPLOT),  (QPARM(21),QCORE),
     X            (QPARM(22),QPRINT), (QPARM(23),QAUDMP),
     X            (QPARM(24),QATOM),  (QPARM(25),QMODVO),
     X            (QPARM(28),QMNPRT), (QPARM(29),QCHECK),
     X            (QPARM(30),QANGST), (QPARM(31),QGEOM),
     X            (QPARM(32),QC2FIT), (QPARM(33),QX2FIT),
     X            (QPARM(34),QPSMET), (QPARM(35),QTRACE)
      EQUIVALENCE (IPARM(1),NATOM),   (IPARM(2),NELEM),
     X            (IPARM(8),NORBT),   (IPARM(9),N2ORBT),
     X            (IPARM(12),MXMSTO),
     X            (IPARM(13),N2ATOM), (IPARM(14),MXNORB),
     X            (IPARM(15),MXNSTO), (IPARM(17),NMAX),
     X            (IPARM(18),NNMX),   (IPARM(19),NNMXM1),
     X            (IPARM(20),LMAX),   (IPARM(21),LMXP1),
     X            (IPARM(22),LLMXP1), (IPARM(23),LLMXP2),
     X            (IPARM(24),NCGC),   (IPARM(25),MXITER),
     X            (IPARM(28),L3MX),
     X            (IPARM(30),NABDIM), (IPARM(33),ISPIN),
     X            (IPARM(34),NYLM),   (IPARM(37),MXCYCL),
     X            (IPARM(42),MSTOT)
      EQUIVALENCE (APARM(1),EXPMIN),  (APARM(2),CONVRG),
     X            (APARM(3),THETA),
     X            (APARM(4),CDAMP),   (APARM(5),CACCEL),
     X            (APARM(6),RANGE),   (APARM(7),PKSCAL),
     X            (APARM(8),PKE)
      COMMON /BPARMS/ IELEMB,IUNITB,MDFATB,JDFAT1,MEQATB,JATOM,
     X                NSTOB,MSTOB,NORBB,N2ORBB,IORBTB,M2STOB,JSTOB,
     X                NVTRMB
      COMMON /IODATA/ IUNIT(20),LENBUF
      EQUIVALENCE (IUNIT(5),IR),      (IUNIT(6),IW),
     X            (IUNIT(7),IP),      (IUNIT(8),IUDUMP),
     X            (IUNIT(9),IUTEMP),  (IUNIT(10),IUCSF)
      COMMON /DAUNIT/ NRECS,LENREC,NEXREC,NLRECS,NBYTES,QMXREC
      COMMON /STATE/ NCREAT,NANNIH,ICREAT(7),IANNIH(7),QTRANS
      COMMON /ENERGY/ TOTPE,TOTKE,TMOLE,ZZPOT,ETOT,VIRTHM,DELTAE
      CHARACTER*8 SPIN
      COMMON /CHARGS/ ZNSUM,ELSUM,ELDIF,ELECS(2),SPIN(2),ORBOCC,CHTRAN
      COMMON /MODPOT/ WGT0,WGT1,WGT2,WGTC,WGTV,VDAMP,VACCEL,
     X                TFEXP(4),TFCOEF(4),LTF(4),MXTF
      COMMON /PUNCHK/ RENRMA,RENRMB,KATOM,KORB,KSP,QPNCHK
      REAL*4 BEGIN,START,FINISH,SECS,TIMEND,TIMAX
      COMMON /TIMES/ BEGIN,START,FINISH,SECS,TIMEND
      COMMON /NDXTEI/ IAC,KAC,IBD,KBD,IAD,KAD,IBC,KBC,IAB,KAB,ICD,KCD
      CHARACTER*1 TITLE(80)
      DIMENSION EXPTF(4),COEFTF(4),LTF0(4)
C----------------------------------------------------------------------
C FIXED CORE ALLOCATION:
C
      PARAMETER (ICORE = 1000000)
      COMMON /FIXED/ MXCORE,NWCORE,NWORDS
      COMMON /CORE/ CORE(ICORE),IC(30)
      INTEGER*4 JCORE(1)
      CHARACTER*2 LCORE(1)
      EQUIVALENCE (CORE(1),JCORE(1),LCORE(1))
C----------------------------------------------------------------------
      NAMELIST /CTLINP/ QRSTRT,QBAKUP,QOPEN,QDEBUG,QSEPAT,QCMPTD,QEWMO,
     X                  QATOM,QMODVO,QMXREC,QMNPRT,QCHECK,QGEOM,QRERUN,
     X                  QANGST,TIMEND,MXNSTO,NRECS,LENREC,PKSCAL,PKE,
     X                  NATOM,NELEM,NORBT,MXNORB,MSTOT,MXMSTO,NMAX,LMAX,
     X                  MXITER,MXCYCL,IUNIT,LENBUF,KATOM,KORB,KSP,
     X                  WGT0,WGT1,WGT2,WGTV,WGTC,VDAMP,VACCEL,
     X                  TFEXP,TFCOEF,LTF,QC2FIT,QX2FIT,QPSMET,THETA,
     X                  RANGE,EXPMIN,CONVRG,CDAMP,CACCEL,NCREAT,NANNIH,
     X                  ICREAT,IANNIH,QTRANS,QPLOT,QCORE,QPRINT,QAUDMP,
     X                  QTRACE
      CHARACTER*8 ROUTIN
      COMMON /DYNAMC/ LISTAR(500),IPTR(10),NNIA(10),NID(10),NXARG(10),
     X                ROUTIN(10),NROUT
      COMMON /MOLSTR/ MSPTR
      DATA ZERO/0.0D0/,HALF/0.5D0/,ONE/1.0D0/
      DATA UNDFLO/-60.D0/,
     X     TOLER/1.D-3/
      DATA TIMAX/9.E4/
      DATA RANGE0/10.D0/
      DATA EXPTF/0.0D0,3.519D0,1.938D0,0.357D0/,
     X     COEFTF/1.0D0,-0.125D0,-0.35D0,-0.525D0/,
     X     LTF0/0,0,0,0/
      DATA BOLTZ/3.166728D-6/

C-----------------------------------------------------------------------
C
C     DIMENSION RESTRICTIONS IMPOSED BY /DYNAMC/ COMMON BLOCK:
C
C        NROUT .LE. 10
C        SUM(I=1,NROUT) IPTR(I)+3*NNIA(I)+NID(I)+NXARG(I) .LE. 500
C
C-----------------------------------------------------------------------
      IPTR(1)=1
      DO 10 NR=2,NROUT
      NRM1=NR-1
      IPTR(NR)=IPTR(NRM1)+3*NNIA(NRM1)+NID(NRM1)+NXARG(NRM1)
   10 CONTINUE
C-----------------------------------------------------------------------
C
C     FIXED CORE ALLOCATION (8-BYTE WORDS)
C
C     /FIXED/
C
C       MXCORE...MAXIMUM CORE ALLOCATED
C       NWCORE...WORDS OF CORE REMAINING
C       NWORDS...WORDS OF CORE BEING ALLOCATED
C
C-----------------------------------------------------------------------
      MXCORE=ICORE
      NWCORE=MXCORE
C
      CALL DERASE(APARM,10)
      CALL IERASE(IPARM,40)
      CALL QERASE(QPARM,40)
      CALL IERASE(ICREAT,7)
      CALL IERASE(IANNIH,7)
      MXTF=4

      DO 20 NV=1,MXTF
      TFEXP(NV)=EXPTF(NV)
      TFCOEF(NV)=COEFTF(NV)
      LTF(NV)=LTF0(NV)
   20 CONTINUE

      NATOM=1
      NELEM=1
      NORBT=5
	MSTOT=5
      QTRACE=.FALSE.
      QDEBUG=.FALSE.
      QRSTRT=.FALSE.
      QBAKUP=.FALSE.
      QCMPTD=.FALSE.
      QMXREC=.TRUE.
      QOPEN=.TRUE.
      QSEPAT=.TRUE.
      QPRINT=.FALSE.
      QMNPRT=.FALSE.
      QCHECK=.FALSE.
      QATOM=.FALSE.
      QEWMO=.FALSE.
      QAUDMP=.FALSE.
      QMODVO=.FALSE.
      QANGST=.FALSE.
      QGEOM=.FALSE.
      QRERUN=.FALSE.

      DO 30 I=1,20
   30 IUNIT(I)=I

      IUNIT(9)=21   ! Unit 9 reserved for console
      OPEN(9,FILE='Phatpsy.Stderr')

      LENBUF=804
      NRECS=200
      LENREC=50
      NMAX=2
      LMAX=1
      MXNSTO=3
      MXMSTO=5
      MXNORB=5
      MXITER=20
      MXCYCL=1
      TIMEND=TIMAX
      EXPMIN=UNDFLO
      THETA=1.0D5  
      CONVRG=TOLER
      CDAMP=ONE
      CACCEL=ONE
      WGT0=ONE
      WGT1=ONE
      WGT2=ONE
      WGTC=ONE
      WGTV=ONE
      VDAMP=ZERO
      VACCEL=ONE
      RANGE=RANGE0
      PKSCAL=ONE
      PKE=ZERO
      NCREAT=0
      NANNIH=0
      KATOM=0
      KORB=0
      KSP=0
      QTRANS=.FALSE.
      QGSTAT=.TRUE.
      QPLOT=.FALSE.
      QCORE=.FALSE.
      QC2FIT=.TRUE.
      QX2FIT=.TRUE.
      QPSMET=.TRUE.

C     Read the CAChe MolStruct file

C      CALL MS_get(MSPTR,IER)
C-----------------------------------------------------------------------
C   OPEN STANDARD INPUT FILE (READ TITLE) AND STANDARD OUTPUT FILE
C-----------------------------------------------------------------------
C      OPEN(UNIT=IR,FILE='')  !Comment out for Unix/Linux

C      OPEN(UNIT=IW,FILE='')  !Comment out for Unix/Linux

      IF (IUDUMP .NE. IW) OPEN (IUDUMP,FILE='Phatpsy.Debug')
      OPEN (UNIT=IP,FILE='Phatpsy.Punch')
C-----------------------------------------------------------------------
C   READ TITLE AND CONTROL INPUT (&CTLINP)
C-----------------------------------------------------------------------
   35 CONTINUE
      READ (IR,1000,END=80) TITLE
      IF (QTRACE) WRITE (9,*) TITLE
      WRITE (IW,*) TITLE
C     CALL $PAGE(60,80,TITLE,1,IW)
      IF (QTRACE) WRITE (9,*) 'Reading Control Input (&CTLINP)...'
      READ (IR,CTLINP,END=80)
C      READ (IR,*) QRSTRT,NATOM,NELEM,NORBT
      CALL GETSET
      CALL SETBOM
      IF (QDEBUG) WRITE (IUDUMP,CTLINP)
      IF (QBAKUP) QRSTRT=.TRUE.
      IF (QRSTRT) QSEPAT=.FALSE.
      IF (QDEBUG) QPRINT=.TRUE.
C      IF (NATOM.EQ.1) QATOM=.TRUE.
      IF (QATOM.AND.QRSTRT) QBAKUP=.TRUE.
      IF (QATOM) NORBT=MXNORB
	IF (NORBT.LT.MXNORB) NORBT=MXNORB*NATOM
	IF (MSTOT.LT.MXMSTO) MSTOT=MXMSTO*NATOM
	IF (MSTOT.LT.NORBT) MSTOT=NORBT
      IF ((NCREAT.GT.0).OR.(NANNIH.GT.0)) QGSTAT=.FALSE.
      WRITE (IW,2000)
      IF (QCHECK) WRITE(IW,2500)
      IF (QRERUN) THEN
         QRSTRT=.TRUE.
         QCMPTD=.TRUE.
         MXCYCL=0
         IF (QBAKUP) MXCYCL=1
            WRITE(IW,2600)
      ENDIF
      IF (QRSTRT.AND..NOT.QBAKUP) WRITE (IW,3000) IUNIT(4)
      IF (QBAKUP) WRITE (IW,3000) IUNIT(3)
      IF (QOPEN) WRITE (IW,4000)
      IF (QDEBUG) WRITE (IW,5000) IUNIT(8)
      IF (QGEOM) WRITE (IW,5500)
      IF (QATOM) GO TO 40
      IF (QSEPAT) WRITE (IW,6000)
      IF (QCMPTD) WRITE (IW,7000) IUNIT(1),IUNIT(2)
   40 CONTINUE
      IF (QATOM.OR..NOT.QEWMO) WRITE (IW,8000)
      IF (QATOM) GO TO 50
      IF (QGSTAT) WRITE (IW,9000)
      IF (.NOT.QGSTAT) WRITE (IW,10000)
      IF (NCREAT.GT.0) WRITE (IW,11000) (ICREAT(ICR),ICR=1,NCREAT)
      IF (NANNIH.GT.0) WRITE (IW,12000) (IANNIH(IAN),IAN=1,NANNIH)
      IF (.NOT.QGSTAT) WRITE (IW,13000)
      IF (QTRANS) WRITE (IW,14000)
   50 CONTINUE
      IF (QCORE) WRITE (IW,15000)
      IF (QPLOT) WRITE (IW,16000)
      IF (QATOM) GO TO 60
      IF (QPRINT) WRITE (IW,17000)
      IF (QMNPRT) WRITE(IW,17500) IUNIT(6)
      WRITE (IW,18000) NATOM,NELEM
      WRITE (IW,19000) NORBT,MXNORB
      WRITE (IW,20000) MSTOT,MXMSTO,NMAX,LMAX
      WRITE (IW,21000) MXCYCL,MXITER
   60 CONTINUE
      WRITE (IW,21500) TIMEND
      WRITE (IW,22000) LENBUF
      WRITE (IW,23000) EXPMIN
      WRITE (IW,24000) CONVRG
      WRITE (IW,24500) THETA 
      THETA=BOLTZ*THETA
      IF (QMODVO) WRITE (IW,25000)
      IF (QATOM) GO TO 70
      IF (QANGST) WRITE (IW,25500)
      IF (.NOT.QAUDMP) WRITE (IW,28000) CDAMP,CACCEL
      IF (QC2FIT) WRITE (IW,29000) WGT0,WGT1,WGTC,WGTV,WGT2
      IF (.NOT.QC2FIT) WRITE (IW,29010) 
      IF (.NOT.QX2FIT) WRITE (IW,29020) 
      IF (QPSMET) WRITE (IW,29030) 
      IF (VDAMP.NE.ZERO) WRITE (IW,30000) VDAMP,VACCEL
      WRITE(IW,30500) PKSCAL
      IF (.NOT.QPSMET) WRITE(IW,30600) PKE   
      WRITE (IW,31000) IUNIT(1)
      IF (.NOT.QMXREC) WRITE (IW,32000) IUNIT(1),LENREC,NRECS
      WRITE (IW,33000) IUNIT(2)
      WRITE (IW,34000) IUNIT(3),IUNIT(4)
      WRITE (IW,35000) IUCSF
      IF (KATOM.NE.0) WRITE (IW,36000) KORB,KSP,KATOM
      IF (QAUDMP) WRITE (IW,37000) CACCEL
   70 CONTINUE
      IF (QATOM) WRITE (IW,38000) IUNIT(3)
      ISPIN=1
      IF (QOPEN) ISPIN=2
      N2ATOM=(NATOM*(NATOM+1))/2
      N2ORBT=(NORBT*(NORBT+1))/2
      NNMX=2*NMAX
      NNMXM1=NNMX-1
      NABDIM=5*NMAX-1
      LMXP1=LMAX+1
      LLMX=2*LMAX
      LLMXP1=LLMX+1
      LLMXP2=LLMXP1+1
      L3MX=((LLMX+1)*(LLMX+2)*(LLMX+3))/6
      NYLM=LLMXP1*LMXP1
      NCGC=NDXMAX(LMAX)
      NDXDIM=MAX0(MXMSTO,NATOM,NNMX)
C----------------------------------------------------------------------
C  FIXED CORE ALLOCATION OFFSETS:
C
      IC(1)=1
      IC(2)=IC(1)+(NDXDIM+1)/2
      IC(3)=IC(2)+(N2ATOM+1)/2
      IC(4)=IC(3)+NCGC
      IC(5)=IC(4)+NYLM
      IC(6)=IC(5)+NNMX
      IC(7)=IC(6)+NNMXM1
      IC(8)=IC(7)+NNMXM1*NNMXM1
      IC(9)=IC(8)+NNMXM1*NNMXM1
      IC(10)=IC(9)+NABDIM
      IC(11)=IC(10)+NABDIM
      IC(12)=IC(11)+L3MX*2
      IC(13)=IC(12)+LENBUF
      IC(14)=IC(13)+N2ORBT*ISPIN
      IC(15)=IC(14)+N2ORBT*ISPIN
      IC(16)=IC(15)+NORBT*ISPIN
      IC(17)=IC(16)+3*NATOM
      IC(18)=IC(17)+(NATOM+3)/4
      IC(19)=IC(18)+3*NATOM
      IC(20)=IC(19)+LLMXP2*2
	IC(21)=IC(20)+(MSTOT+1)/2
	IC(22)=IC(21)+(MSTOT+1)/2
	IC(23)=IC(22)+(MSTOT+1)/2
	IC(24)=IC(23)+(MSTOT+1)/2
	IC(25)=IC(24)+MSTOT
	IC(26)=IC(25)+MSTOT
	IC(27)=IC(26)+NORBT*ISPIN
	IC(28)=IC(27)+NORBT*ISPIN
	IC(29)=IC(28)+MSTOT*NORBT*ISPIN

      NWORDS=IC(29)
      WRITE (IW,39000) (8*NWORDS)/1024
      NWCORE=NWCORE-NWORDS
      IF (NWCORE.LE.0) CALL BOMB(0)
      IF (QTRACE) WRITE (9,*) 'Calling CONTRL...'

      J1=2*IC(1)-IC(1)
      J2=2*IC(2)-IC(1)
      L17=4*IC(17)-3*IC(1)
	J21=2*IC(21)-IC(1)
	J22=2*IC(22)-IC(1)
	J23=2*IC(23)-IC(1)
	J24=2*IC(24)-IC(1)

      CALL CONTRL(JCORE(J1),JCORE(J2),CORE(IC(3)),CORE(IC(4)),
     X            CORE(IC(5)),CORE(IC(6)),CORE(IC(7)),CORE(IC(8)),
     X            CORE(IC(9)),CORE(IC(10)),CORE(IC(11)),CORE(IC(12)),
     X            CORE(IC(13)),CORE(IC(14)),CORE(IC(15)),CORE(IC(16)),
     X            LCORE(L17),CORE(IC(18)),CORE(IC(19)),CORE(IC(20)),
     X            CORE(J21),CORE(J22),CORE(J23),CORE(J24),
     X            CORE(IC(25)),CORE(IC(26)),CORE(IC(27)),CORE(IC(28)),
     X            CORE(IC(29)))

      GOTO 35

   80 CONTINUE
   
      IF (IW .NE. 6) CLOSE(IW)
      IF (IUDUMP .NE. IW) CLOSE(IUDUMP)
      CLOSE(IP)

C     Write out an updated MolStruct file.

C      CALL MS_put(MSPTR,IER)

      IF (QTRACE) WRITE (9,*) '*** THE END ***'
      STOP

 1000 FORMAT(80A1)
 2000 FORMAT(//
     X ' ',T25,' ---------------------------------------------------- '/
     X ' ',T25,'|                                                    |'/
     X ' ',T25,'|                 P H A T P S Y                      |'/
     X ' ',T25,'|                                                    |'/
     X ' ',T25,'|                    PROGRAM                         |'/
     X ' ',T25,'|                                                    |'/
     X ' ',T25,'|                      BY                            |'/
     X ' ',T25,'|                                                    |'/
     X ' ',T25,'|                 JACK A. SMITH                      |'/
     X ' ',T25,'|             QUANTUM THEORY PROJECT                 |'/
     X ' ',T25,'|             UNIVERSITY OF FLORIDA                  |'/
     X ' ',T25,'|                      -                             |'/
     X ' ',T25,'|           UNION CARBIDE CORPORATION                |'/
     X ' ',T25,'|               S. CHARLESTON, WV                    |'/
     X ' ',T25,'|                                                    |'/
     X ' ',T25,' ---------------------------------------------------- '//
     X ' === CONTROL INPUT ==='//)
 2500 FORMAT(' ONLY THE INPUT WILL BE CHECKED ON THIS RUN.')
 2600 FORMAT(' THIS IS A RERUN - NO SCF, OR BACKUP AND REPEAT.')
 3000 FORMAT(' THIS IS A RESTART BEGINNING WITH DATA ON UNIT',I3,'.')
 4000 FORMAT(' THIS IS A SPIN-UNRESTRICTED CALCULATION.')
 5000 FORMAT(' THIS IS A DEBUG RUN WITH EXTRA OUTPUT ON UNIT',I3,'.')
 5500 FORMAT(' THIS IS A GEOMETRY RUN.')
 6000 FORMAT(' THE 1ST CYCLE WILL BE A SEPARATED-ATOM CALCULATION.')
 7000 FORMAT(' THE TWO-CENTER INTEGRALS HAVE ALREADY BEEN COMPUTED',
     X       ' AND ARE ON UNITS',I3,' AND',I3,'.')
 8000 FORMAT(' NO EWMO CALCULATION WILL BE PERFORMED - ONLY ATOMIC SCF',
     X       ' WILL BE PERFORMED.')
 9000 FORMAT(' THIS IS A GROUND STATE CALCULATION.')
10000 FORMAT(' THIS CALCULATION WILL BE ON THE STATE GIVEN BY'/)
11000 FORMAT('    ICREAT =',7I4)
12000 FORMAT('    IANNIH =',7I4)
13000 FORMAT('    WORKING ON THE INITIAL "GROUND" STATE.')
14000 FORMAT(' THIS WILL BE A TRANSITION STATE CALCULATION.')
15000 FORMAT(' THE ATOMIC CORE ELECTRONS WILL BE TREATED LIKE VALENCE.')
16000 FORMAT(' TOTAL ATOMIC DENSITY PLOTS WILL BE GENERATED.')
17000 FORMAT(' THE INTERMEDIATE RESULTS FOR EACH CYCLE WILL BE',
     X       ' PRINTED.')
17500 FORMAT(' ONLY MINIMAL PRINTING ON UNIT',I3,' WILL BE PERFORMED.')
18000 FORMAT(' THIS MOLECULE CONTAINS',I3,' ATOMS MADE UP FROM',I3,
     X       ' DIFFERENT ELEMENTS.')
19000 FORMAT(' THIS MOLECULE CONTAINS',I4,' ATOMIC ORBITALS WITH A',
     X       ' MAXIMUM OF',I3,' ON ANY ATOM.')
20000 FORMAT(' THE BASIS CONTAINS',I4,' STO''S WITH THE LARGEST',
     X       ' ATOM HAVING',I3,' WITH (N,L) UP TO (',I1,',',I1,').')
21000 FORMAT(' THE MAXIMUM NUMBER CYCLES TO BE ALLOWED IS',I3,' WITH',
     X         I3,' ITERATIONS PER CYCLE.')
21500 FORMAT(' THE MAXIMUM CPU TIME ALLOWED IS',F7.0,' SECONDS.')
22000 FORMAT(' THE TWO-ELECTRON INTEGRAL BUFFER IS',I5,' DOUBLE WORDS',
     X       ' LONG.')
23000 FORMAT(' THE SMALLEST EXPONENT EVALUATED DURING INTEGRAL',
     X       ' COMPUTATION IS',F7.1)
24000 FORMAT(' THE TOTAL ENERGY CONVERGENCE THRESHOLD IS',1PD9.1)
24500 FORMAT(' THE FERMI "TEMPERATURE" FOR CHARGE EQUILIBRATION IS',
     X         1PD9.1)
25000 FORMAT(' THE VIRTUAL ORBITAL ENERGIES WILL BE MODIFIED.')
25500 FORMAT(' ALL DISTANCES WILL BE GIVEN IN ANGSTROMS AND CONVERTED',
     X       ' TO ATOMIC UNITS (BOHRS) WITHIN.')
28000 FORMAT(' THE CHARGE TRANSFER IN THE MOLECULE WILL BE DAMPED BY',
     X       F6.2,' **',F6.2,'.')
29000 FORMAT(' THE FOLLOWING CONDITIONS WILL BE SATISFIED ACCORDING TO'/
     X       '    THE GIVEN WEIGHTS IN FITTING THE MODEL POTENTIALS.'/
     X       '       BEHAVIOR AT THE NUCLEUS........',F9.4/
     X       '       HF COUL POTENTIAL AT NUCLEUS...',F9.4/
     X       '       CORE HF COULOMB POTENTIALS.....',F9.4/
     X       '       VALENCE HF COULOMB POTENTIALS..',F9.4/
     X       '       EXTERNAL NUC. ATT. POTENTIAL...',F9.4)
29010 FORMAT(' THE 2-CENTER COULOMB POTENTIALS WILL NOT BE FIT EACH',
     X       ' CYCLE.')
29020 FORMAT(' THE 2-CENTER EXCHANGE POTENTIALS WILL NOT BE FIT EACH',
     X       ' CYCLE.')
29030 FORMAT(' THE ENERGY DEPENDENCE OF THE PSEUDOPOTENTIAL WILL BE',
     X       ' HANDLED BY PSEUDOMETRIC.')
30000 FORMAT(' THE CHANGE IN THE EXTERNAL POTENTIAL WILL BE DAMPED BY',
     X       F6.2,' **',F6.2,'.')
30500 FORMAT(' THE P-K PROJECTION MATRIX WILL BE SCALED BY',F6.2,'.')
30600 FORMAT(' THE ENERGY USED IN THE P-K PSEUDOPOTENTIAL IS',F7.2,'.')
31000 FORMAT(' THE PRIMITIVE TWO-CENTER OVERLAP INTEGRALS WILL BE ON',
     X       ' DIRECT-ACCESS UNIT',I3,'.')
32000 FORMAT(' THE SPACE PARAMETER FOR UNIT',I3,' SHOULD BE (4*',I4,
     X       ',',I4,').')
33000 FORMAT(' THE PRIMITIVE TWO-CENTER MODEL POTENTIAL INTEGRALS WILL',
     X       ' BE ON UNIT',I3,'.')
34000 FORMAT(' THE INTERMEDIATE AND FINAL ATOMIC DATA WILL BE ON',
     X       ' UNITS',I3,' AND',I3,' ALTERNATELY.')
35000 FORMAT(' THE FINAL CSF (MOLSTRUCT) OUTPUT WILL BE ON UNIT',I3,'.')
36000 FORMAT(' THE',I3,'-',I1,' ORBITAL ON ATOM',I3,' WILL BE PUNCHED.')
37000 FORMAT(' THE CHARGE TRANSFER WILL BE AUTOMATICALLY DAMPED',
     X       ' ACCORDING TO THE RELATIVE CHARGE TRANSFER (RCT)'/
     X       '    CDAMP = RCT**',F6.2)
38000 FORMAT(' THE INTERMEDIATE AND FINAL ATOMIC DATA WILL BE ON',
     X       ' UNIT',I3,'.')
39000 FORMAT(' ...',I6,'K BYTES OF CORE TO BE ALLOCATED FOR CONTRL ...')
      END
C
C=======================================================================
C
      BLOCK DATA
      IMPLICIT REAL*8(A-H,O-Z)
C-----------------------------------------------------------------------
C
C     /DYNAMC/...
C
C        THIS COMMON CONTAINS INFORMATION USED BY ASSARD FOR DYNAMIC
C     ALLOCATION OF ARRAYS IN CALLS TO VARIOUS ROUTINES.
C
C-----------------------------------------------------------------------
      CHARACTER*8 ROUTIN
      COMMON /DYNAMC/ LISTAR(500),IPTR(10),NNIA(10),NID(10),NXARG(10),
     X                ROUTIN(10),NROUT
C----------------------------------------------------------------------
C
C     /TABLES/...
C
C        THIS COMMON CONTAINS COMMONLY USED CONSTANTS (OFTEN FOUND IN
C     MATHEMATICAL TABLES).
C
C        REALS(N)....... N.0D00
C        FACT(N)........ 1*2*...*(N-1)          (FACTORIAL)
C        FFAC(N)........ 1*3*...*(N-1)*(N+1)    N - EVEN
C                        2*4*...*(N-1)*(N+1)    N - ODD
C        BINOM(*)....... 1
C                        1 1
C                        1 2 1
C                        1 3 3 1
C                        1 4 6 4 1
C                        . . . . . .
C        ROOT(N)........ SQRT(N.0D00)
C        HALFPI(N)...... N*PI/2
C
C-----------------------------------------------------------------------
      COMMON /TABLES/ REALS(10),FACT(22),FFAC(19),BINOM(91),HALFPI(8),
     X                ZERO,HALF,ROOT(10),ROOTPI,CONST(10),CONVRT(10)
      DATA NNIA  /19,25,22,5,35,29,4*0/,
     X     NID   /4*0,3,5*0/,
     X     NXARG /0,12,12,3,5,28,4*0/,
     X     ROUTIN/'CONTRL .','ATOMIC .','ALOOP ..','EWMO ...',
     X            'SCF ....','BLOOP ..','        ','        ',
     X            '        ','        '/,
     X     NROUT /6/
      DATA FACT/1.D0,1.D0,2.D0,6.D0,24.D0,12.D1,72.D1,504.D1,4032.D1,
     X        36288.D1,36288.D2,399168.D2,4790016.D2,62270208.D2,
     X        871782912.D2,1307674368.D3,20922789888.D3,355687428096.D3,
     X        6402373705728.D3,121645100408832.D3,243290200817664.D4,
     X        5109094217170944.D4/
      DATA REALS/1.D0,2.D0,3.D0,4.D0,5.D0,6.D0,7.D0,8.D0,9.D0,1.D1/
      DATA HALFPI/1.5707963268D0,3.1415936536D0,4.7123889804D0,
     X            6.2831853072D0,7.8539816340D0,9.4247779608D0,
     X            1.09955742876D1,1.25663706144D1/
      DATA ZERO/0.D0/,HALF/0.5D0/,ROOTPI/1.7724539D0/
      DATA ROOT/1.D0,1.4142135623D0,1.7320508075D0,2.D0,2.236068D0,
     X          2.449490D0,2.645751D0,2.828427D0,3.D0,3.162278D0/
      DATA BINOM/1.D0,1.D0,1.D0,1.D0,2.D0,1.D0,1.D0,3.D0,3.D0,1.D0,1.D0,
     X           4.D0,6.D0,4.D0,1.D0,1.D0,5.D0,1.D1,1.D1,5.D0,1.D0,1.D0,
     X           6.D0,1.5D1,2.D1,1.5D1,6.D0,1.D0,1.D0,7.D0,2.1D1,3.5D1,
     X           3.5D1,2.1D1,7.D0,1.D0,1.D0,8.D0,2.8D1,5.6D1,7.D1,5.6D1,
     X           2.8D1,8.D0,1.D0,1.D0,9.D0,3.6D1,8.4D1,1.26D2,1.26D2,
     X           8.4D1,3.6D1,9.D0,1.D0,1.D0,1.D1,4.5D1,1.2D2,2.1D2,
     X           2.52D2,2.1D2,1.2D2,4.5D1,1.D1,1.D0,1.D0,1.1D1,5.5D1,
     X           1.65D2,3.3D2,4.62D2,4.62D2,3.3D2,1.65D2,5.5D1,1.1D1,
     X           1.D0,1.D0,1.2D1,6.6D1,2.2D2,4.95D2,7.92D2,9.24D2,
     X           7.92D2,4.95D2,2.2D2,6.6D1,1.2D1,1.D0/
C-----------------------------------------------------------------------
C
C     /CHARGS/...
C
C-----------------------------------------------------------------------
      CHARACTER*8 SPIN
      COMMON /CHARGS/ ZNSUM,ELSUM,ELDIF,ELECS(2),SPIN(2),ORBOCC,CHTRAN
      DATA SPIN/'ALPHA...','BETA... '/

      END
