C
C     ------------------------------------------------------------------
C
      SUBROUTINE TINVIT(NM,N,D,E,E2,M,W,IND,Z,
     X                  IERR,RV1,RV2,RV3,RV4,RV6)
C
      INTEGER I,J,M,N,P,Q,R,S,II,IP,JJ,NM,ITS,TAG,IERR,GROUP
      REAL*8 D(N),E(N),E2(N),W(M),Z(NM,M),
     X       RV1(N),RV2(N),RV3(N),RV4(N),RV6(N)
      REAL*8 U,V,UK,XU,X0,X1,EPS2,EPS3,EPS4,NORM,ORDER
      REAL*8 DSQRT,DABS,DFLOAT
      INTEGER IND(M)
C
C     THIS SUBROUTINE IS A TRANSLATION OF THE INVERSE ITERATION TECH-
C     NIQUE IN THE ALGOL PROCEDURE TRISTURM BY PETERS AND WILKINSON.
C     HANDBOOK FOR AUTO. COMP., VOL.II-LINEAR ALGEBRA, 418-439(1971).
C
C     THIS SUBROUTINE FINDS THOSE EIGENVECTORS OF A TRIDIAGONAL
C     SYMMETRIC MATRIX CORRESPONDING TO SPECIFIED EIGENVALUES,
C     USING INVERSE ITERATION.
C
C     ON INPUT
C
C        NM MUST BE SET TO THE ROW DIMENSION OF TWO-DIMENSIONAL
C          ARRAY PARAMETERS AS DECLARED IN THE CALLING PROGRAM
C          DIMENSION STATEMENT;
C
C        N IS THE ORDER OF THE MATRIX;
C
C        D CONTAINS THE DIAGONAL ELEMENTS OF THE INPUT MATRIX;
C
C        E CONTAINS THE SUBDIAGONAL ELEMENTS OF THE INPUT MATRIX
C          IN ITS LAST N-1 POSITIONS.  E(1) IS ARBITRARY;
C
C        E2 CONTAINS THE SQUARES OF THE CORRESPONDING ELEMENTS OF E,
C          WITH ZEROS CORRESPONDING TO NEGLIGIBLE ELEMENTS OF E.
C          E(I) IS CONSIDERED NEGLIGIBLE IF IT IS NOT LARGER THAN
C          THE PRODUCT OF THE RELATIVE MACHINE PRECISION AND THE SUM
C          OF THE MAGNITUDES OF D(I) AND D(I-1).  E2(1) MUST CONTAIN
C          0.0D0 IF THE EIGENVALUES ARE IN ASCENDING ORDER, OR 2.0D0
C          IF THE EIGENVALUES ARE IN DESCENDING ORDER.  IF  BISECT,
C          TRIDIB, OR  IMTQLV  HAS BEEN USED TO FIND THE EIGENVALUES,
C          THEIR OUTPUT E2 ARRAY IS EXACTLY WHAT IS EXPECTED HERE;
C
C        M IS THE NUMBER OF SPECIFIED EIGENVALUES;
C
C        W CONTAINS THE M EIGENVALUES IN ASCENDING OR DESCENDING ORDER;
C
C        IND CONTAINS IN ITS FIRST M POSITIONS THE SUBMATRIX INDICES
C          ASSOCIATED WITH THE CORRESPONDING EIGENVALUES IN W --
C          1 FOR EIGENVALUES BELONGING TO THE FIRST SUBMATRIX FROM
C          THE TOP, 2 FOR THOSE BELONGING TO THE SECOND SUBMATRIX, ETC.
C
C     ON OUTPUT
C
C        ALL INPUT ARRAYS ARE UNALTERED;
C
C        Z CONTAINS THE ASSOCIATED SET OF ORTHONORMAL EIGENVECTORS.
C          ANY VECTOR WHICH FAILS TO CONVERGE IS SET TO ZERO;
C
C        IERR IS SET TO
C          ZERO       FOR NORMAL RETURN,
C          -R         IF THE EIGENVECTOR CORRESPONDING TO THE R-TH
C                     EIGENVALUE FAILS TO CONVERGE IN 5 ITERATIONS;
C
C        RV1, RV2, RV3, RV4, AND RV6 ARE TEMPORARY STORAGE ARRAYS.
C
C     QUESTIONS AND COMMENTS SHOULD BE DIRECTED TO B. S. GARBOW,
C     APPLIED MATHEMATICS DIVISION, ARGONNE NATIONAL LABORATORY
C
C     ------------------------------------------------------------------
C
C                MACHEP IS A MACHINE DEPENDENT PARAMETER SPECIFYING
C                THE RELATIVE PRECISION OF FLOATING POINT ARITHMETIC.
C                MACHEP = 16.0D0**(-13) FOR LONG FORM ARITHMETIC
C                ON S360
      REAL*8 MACHEP
C      PARAMETER (MACHEP = $3410000000000000)
      PARAMETER (MACHEP = 16.0D0**(-13))
C
      IERR = 0
      IF (M .EQ. 0) GO TO 320
      TAG = 0
      ORDER = 1.0D0 - E2(1)
      Q = 0
C                ESTABLISH AND PROCESS NEXT SUBMATRIX
   10 P = Q + 1
C
      DO 20 Q = P, N
      IF (Q .EQ. N) GO TO 30
      IF (E2(Q+1) .EQ. 0.0D0) GO TO 30
   20 CONTINUE
C                FIND VECTORS BY INVERSE ITERATION
   30 TAG = TAG + 1
      S = 0
C
      DO 310 R = 1, M
      IF (IND(R) .NE. TAG) GO TO 310
      ITS = 1
      X1 = W(R)
      IF (S .NE. 0) GO TO 70
C                CHECK FOR ISOLATED ROOT
      XU = 1.0D0
      IF (P .NE. Q) GO TO 40
      RV6(P) = 1.0D0
      GO TO 280
   40 NORM = DABS(D(P))
      IP = P + 1
C
      DO 50 I = IP, Q
   50 NORM = NORM + DABS(D(I)) + DABS(E(I))
C                EPS2 IS THE CRITERION FOR GROUPING,
C                EPS3 REPLACES ZERO PIVOTS AND EQUAL
C                ROOTS ARE MODIFIED BY EPS3,
C                EPS4 IS TAKEN VERY SMALL TO AVOID OVERFLOW
      EPS2 = 1.0D-3 * NORM
      EPS3 = MACHEP * NORM
      UK = DFLOAT(Q-P+1)
      EPS4 = UK * EPS3
      UK = EPS4 / DSQRT(UK)
      S = P
   60 GROUP = 0
      GO TO 80
C                LOOK FOR CLOSE OR COINCIDENT ROOTS
   70 IF (DABS(X1-X0) .GE. EPS2) GO TO 60
      GROUP = GROUP + 1
      IF (ORDER * (X1 - X0) .LE. 0.0D0) X1 = X0 + ORDER * EPS3
C                ELIMINATION WITH INTERCHANGES AND
C                INITIALIZATION OF VECTOR
   80 V = 0.0D0
C
      DO 110 I = P, Q
      RV6(I) = UK
      IF (I .EQ. P) GO TO 100
      IF (DABS(E(I)) .LT. DABS(U)) GO TO 90
C                WARNING -- A DIVIDE CHECK MAY OCCUR HERE IF
C                E2 ARRAY HAS NOT BEEN SPECIFIED CORRECTLY
      XU = U / E(I)
      RV4(I) = XU
      RV1(I-1) = E(I)
      RV2(I-1) = D(I) - X1
      RV3(I-1) = 0.0D0
      IF (I .NE. Q) RV3(I-1) = E(I+1)
      U = V - XU * RV2(I-1)
      V = -XU * RV3(I-1)
      GO TO 110
   90 XU = E(I) / U
      RV4(I) = XU
      RV1(I-1) = U
      RV2(I-1) = V
      RV3(I-1) = 0.0D0
  100 U = D(I) - X1 - XU * V
      IF (I .NE. Q) V = E(I+1)
  110 CONTINUE
C
      IF (U .EQ. 0.0D0) U = EPS3
      RV1(Q) = U
      RV2(Q) = 0.0D0
      RV3(Q) = 0.0D0
C                BACK SUBSTITUTION
C                FOR I=Q STEP -1 UNTIL P DO --
  120 DO 130 II = P, Q
      I = P + Q - II
      RV6(I) = (RV6(I) - U * RV2(I) - V * RV3(I)) / RV1(I)
      V = U
      U = RV6(I)
  130 CONTINUE
C                ORTHOGONALIZE WITH RESPECT TO PREVIOUS
C                MEMBERS OF GROUP
      IF (GROUP .EQ. 0) GO TO 180
      J = R
C
      DO 170 JJ = 1, GROUP
  140 J = J - 1
      IF (IND(J) .NE. TAG) GO TO 140
      XU = 0.0D0
C
      DO 150 I = P, Q
  150 XU = XU + RV6(I) * Z(I,J)
C
      DO 160 I = P, Q
  160 RV6(I) = RV6(I) - XU * Z(I,J)
C
  170 CONTINUE
C
  180 NORM = 0.0D0
C
      DO 190 I = P, Q
  190 NORM = NORM + DABS(RV6(I))
C
      IF (NORM .GE. 1.0D0) GO TO 260
C                FORWARD SUBSTITUTION
      IF (ITS .EQ. 5) GO TO 250
      IF (NORM .NE. 0.0D0) GO TO 200
      RV6(S) = EPS4
      S = S + 1
      IF (S .GT. Q) S = P
      GO TO 220
  200 XU = EPS4 / NORM
C
      DO 210 I = P, Q
  210 RV6(I) = RV6(I) * XU
C                ELIMINATION OPERATIONS ON NEXT VECTOR
C                ITERATE
  220 DO 240 I = IP, Q
      U = RV6(I)
C                IF RV1(I-1) .EQ. E(I), A ROW INTERCHANGE
C                WAS PERFORMED EARLIER IN THE
C                TRIANGULARIZATION PROCESS
      IF (RV1(I-1) .NE. E(I)) GO TO 230
      U = RV6(I-1)
      RV6(I-1) = RV6(I)
  230 RV6(I) = U - RV4(I) * RV6(I-1)
  240 CONTINUE
C
      ITS = ITS + 1
      GO TO 120
C                SET ERROR -- NON-CONVERGED EIGENVECTOR
  250 IERR = -R
      XU = 0.0D0
      GO TO 280
C                NORMALIZE SO THAT SUM OF SQUARES IS
C                1 AND EXPAND TO FULL ORDER
  260 U = 0.0D0
C
      DO 270 I = P, Q
  270 U = U + RV6(I)**2
C
      XU = 1.0D0 / DSQRT(U)
C
  280 DO 290 I = 1, N
  290 Z(I,R) = 0.0D0
C
      DO 300 I = P, Q
  300 Z(I,R) = RV6(I) * XU
C
      X0 = X1
  310 CONTINUE
C
      IF (Q .LT. N) GO TO 10
  320 RETURN
C                LAST CARD OF TINVIT
      END
